<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: life | ]]></title>
  <link href="http://zyearn.github.io/blog/categories/life/atom.xml" rel="self"/>
  <link href="http://zyearn.github.io/"/>
  <updated>2021-01-28T22:38:08+01:00</updated>
  <id>http://zyearn.github.io/</id>
  <author>
    <name><![CDATA[Jiashun Zhu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2020感想]]></title>
    <link href="http://zyearn.github.io/blog/2021/01/03/2020-thoughts/"/>
    <updated>2021-01-03T22:17:58+01:00</updated>
    <id>http://zyearn.github.io/blog/2021/01/03/2020-thoughts</id>
    <content type="html"><![CDATA[<h2>2020感想（一）于 2020-12-30 19:11</h2>

<p>从上周就开始了两周的假期，每年的最后一周的主题总是反思和放松，并和过去几年一样，不准备写类似「年终总结」的东西，主要是因为写这个东西实在太累了，无法长期坚持，一想到要回顾一整年，感性上就觉得任务量巨大，能拖就拖吧，于是就拖了一年又一年。就算开始写了，也很难保证它真的是年终总结，生活中有无数的小事在塑造和影响着我们，而这些在年末的时候可能都想不起来了，留在我们记忆中的都是宏观意义上的大事。就算把每件事都写下来了，这些事之间很难有关联性，因为文章的时间跨度是一年，发生在一年内的事情并不代表有关联，于是作为作者需要起承转合来连接这些事情，也构成了写作一大难点。</p>

<p>从读者角度，要看作者一年的信息量，尤其是在赶上了这个年末各种总结堆积的时间，带来的结果是很难让读者认真地去看。</p>

<p>However，年终总结还是有好处的，最大的一个好处是当你和你做的事情、经历的事情保持了一定的距离以后，当初的情绪和冲击早已经烟消云散，能不被当初那个旋涡所带走，而是以一个第三方的视角来重新审视一件事，得到更加客观的视角，从而在事件中成长。</p>

<p>于是我就想了一个折中的办法，写「年终想法」，这是第一条，未来一周正好休假，写到哪算哪，没有任何负担，也不知道会写几条，可能这是第一条也是最后一条。如果刚好能写了4、5条那拼起来「年终总结」也就完成了，同时也不费心费力，正好尝试下。</p>

<p>（原文链接：<a href="https://www.zhihu.com/pin/1327798716515176448">2020感想（一）：从上周就开始了两周的假…</a>）</p>

<h2>2020感想（二）于 2020-12-31 11:54</h2>

<p>写作是一个很神奇的东西，当我在写（一）的时候，接下来的二三四大概写什么已经有一些模糊的主题了。</p>

<p>关于年终总结，再多写几句。本质来说就是总结和反思，而反思这件事情的时间跨度不能拖太久。以产品为例，如果一个产品从设计到原型到实现到测试上线，如果整个过程花一年的时间，过程中没有任何反馈，上线后必然会面对大量预期落空。合理的方式是从小开始，快速上线一个想法原型，得到一个反馈，调整后再得到反馈，在这个循环中不断改进自己的产品。年终总结也是如此，我比较推荐的方法是每隔一小段时间（具体时间因人而异）就花很小的精力做一下，做迭代式的总结和反思，这样不仅省事，也能及时调整，免得一年后才发现这件事原来有更好的做法。</p>

<p>第二点是人往往会陷入时间的陷阱，觉得在2021要有什么计划要做什么事情，当然这并没有什么问题，只是这些事情并不用等到2021才可以去做，时间是一个人类发明的概念，而真实的世界只有此时此刻，这一秒和下一秒没有任何区别。好好生活在当下，过好每一分每一秒，做好手头上的事情，做好生活中细微的小事，不过分担心还没有发生的事情。不要期待时间能改变什么，时间本身改变不了任何事情，是我们当下微小的努力、行动和思考，以及这些行动的反馈和结果，在慢慢改变我们自己和这个世界。</p>

<p>（原文链接：<a href="https://www.zhihu.com/pin/1328051145282093056">2020感想（二） 写作是一个很神奇的东西…</a>）</p>

<h2>2020感想（三）于 2020-12-31 16:23</h2>

<p>2020对我而言最大的变化是休了三个月的长假，然后换了一个国家生活，来到了瑞士，加入了Google。</p>

<p>先来说说这三个月的假期，我一直觉得人一直处于工作状态不是一件理所应当的事情，比如在默认状态下，没有一些不可抗力的存在（如因生病必须离开工作），那么会期待这个人一直工作直到退休的年纪。我想尝试一下另外一种方式，工作了一段时间后，在基本了解自己过去几年在玩一个什么样的游戏后，短暂性地和自己所做的事保持一个距离，或者离开职场一段时间，用来总结、回顾和休息。有点类似导演、作家、艺人的做法，我相信导演也不是一年三百六十五天在持续地拍电影，而是有好的剧本有好的机会就集中一段时间把电影拍出来，然后需要长时间得思考和调整，甚至过好几年后再拍下一部电影。于是我就给自己了一个三个月的假期什么正经工作都不做，并用来思考一些根本性地问题，包括不限于：</p>

<ul>
<li>我在做目前的工作是因为真的喜欢还是因为惯性？</li>
<li>如果生命还剩下一年的时间，我是不是还会做目前这件事？（真实情况是可能还剩下50年左右）</li>
<li>我到底在追求什么，如果按照之前的轨迹发展下去，会取得我希望的结果和目标吗？</li>
</ul>


<p>当然我也深知这个“短暂离开职场”是一件有风险且需要勇气的事情，有太多世俗意义上的得失需要去考虑，并不是每个人都适合。</p>

<p>在这三个月离开职场的日子里，也发现了一些平时在职场中没有遇到的问题：</p>

<ul>
<li>无论是上学还是职场、都是在一个平台之上做事情，如果离开职场后，没有一个做事情的平台，怎么持续地给自己找一些感兴趣的事情去做？</li>
<li>很多朋友都是因为某种工作场合才认识的，在脱离了这个环境后，会重新思考自己的社交能力</li>
<li>没有老板、没有组会、没有OKR/KPI，怎么驱动和提升自己？</li>
<li>怎么判断自己的方向是不是偏了？在公司里，大家做决策可以一起review一起商量，如果走歪了也比较容易发现，而自己一个人创业/做事情，得到反馈的时间就会比较长</li>
</ul>


<p>这些问题我猜也都是自由职业者考虑的问题，所以我也或多或少地了解了一些自由职业者面临的一些难处和困境。总之，这三个月给了我很大的调整自己的空间和思考时间，以及有时间认真思考一下这几年决策和做事的方法。结束了这段时间后，我就踏上了瑞士之旅。</p>

<p>今晚正好是跨年夜，祝大家元旦快乐。</p>

<p>（原文链接：<a href="https://www.zhihu.com/pin/1328118871102799872">2020感想（三） 2020对我而言最大的变化…</a>）</p>

<h2>2020感想（四）于 2020-01-02 13:45</h2>

<p>这篇来写已经在国内工作了几年后，选择出国工作的想法和初衷，不会涉及过多的国外工作的体验，可能要再等一段时间才有能力来写这个话题。</p>

<p>在写下面这些文字前，由「历史往往是成功者来撰写的」类比，当下的自己是过去所有自己的成功者版本，由当下的那个自己来写下过去无数的自己所做的事情和做的决策，很可能会有很多“历史改写”以及无意识的偏见。人是一个很会自我欺骗、自我编故事的动物，所以我尽量以客观、真诚的视角来写作，不然就没意义了。</p>

<p>随着对自己认识的加深，我发现自己是一个「经历派」，想要在还年轻的时候去体验一下不同的生活和经历，于是抱着对不同文化的好奇，我决定尝试一下在一个不同的国家生活。另外我们做的几乎所有事的副作用都是在「自我探索」，在工作、学习、交流、讨论的时候进行自我观察：为什么我会有这个感觉，为什么会觉得别人冒犯到我了，我怎么会对这件事生气/开心。一切事情都是了解自己的一个机会，我又是一个比较喜欢自我探索的人，而把自己扔到一个新奇的、陌生的、甚至是困难的环境中去，没有比这个更能探索自我的事情了。</p>

<p>至于这个体验是好是坏，很多时候并不由我们自己决定。我是在欧洲的第二波疫情还没有爆发的时候过来的，此时每天新增的数字还在有效的控制范围中，还幻想着欧洲的疫情终于缓下来了，之后可以恢复正常的生活。结果后来我们都知道了，欧洲迎来了第二波猛烈的爆发，并且一直持续到了现在，也打破了我一周偶尔可以去办公室的节奏，瑞士疫情也更严重了，又进入了全面WFH（work from home）的阶段。对于我而言，这无疑是一个坏消息，一部分同事还没有线下见过面，这段时间的WFH经历告诉我，人是需要线下见面的，这样信任感才能慢慢建立起来，这也是对所有新入职同事的挑战和困难。</p>

<p>随着第二波疫情的到来也打破了我对很多事情的期待，比如之前计划着去周边国家的旅游，而现在的情况是边境也封锁了，英国的病毒变异的新闻又是连连不断，自己待在家里是目前最好的选择，实在想出游的话只能先在瑞士境内探索，好消息是瑞士有很多风景胜美的地方可以去。</p>

<p>Google的工作环境目前给我最大的感受是大家是在一个「心理安全区」（Psychological safety）的共识下工作的，就是鼓励大家问问题，鼓励大家把心里的困惑说出来，即使是显而易见的问题，也不用担心评价、批评或惩罚。我的同事第一周就把「冒充者综合征」（imposter syndrome）的心理现象分享给我，意思是大家或多或少在某个时刻会觉得自己不应该在这里工作，害怕别人发现自己是个冒充者而已，告诉我如果我现在或以后有这种想法的话，可以聊一聊。</p>

<p>在感想（三）里有些同学留言问想去面试需要准备什么，在这里做个调研，如果大家想看的话留个言或者给我发个私信，需求比较大的话我抽时间写几篇独立的文章。</p>

<p>不过相比如何面试，一个更重要的问题是「自己为什么要离开现在的环境」，我想特别说的一种情况是不要为了逃避而选择另一条路。一部分同学刚毕业不想工作，于是逃避工作去读研究生、结束仍后不知道干什么，逃避去读个博士了，我不是说读研读博本身不好，而是它们的动机问题；工作了发现自己不喜欢，逃避到另外一份工作，这种逃避式的换环境并不会解决问题，同样的问题在另一个环境中还会出现。或许我们生命中都会面临这种场合，觉得自己被什么东西困住了，这个东西可能是你的家庭、是你的工作、是你的婚姻，想要逃出去，去寻找那个“我真正喜欢的东西，我真正适合的东西”，于是我们不断地向外求，这种逃避并不会解决问题，手里拿着同样一个剧本，只不过演员换了而已。当我们发现换一个环境问题没有得到解决，会更加绝望。希望大家都可以在当前的环境中解决问题，而不是以引起问题的方式解决问题。</p>

<p>写到这里篇幅差不多了，之后有机会再写一些在这里生活和工作的其它感受。</p>

<p>（原文链接：<a href="https://www.zhihu.com/pin/1328803982852894720">2020感想（四） 这篇来写已经在国内工作…</a>）</p>

<h2>2020感想（五）于 2020-01-02 20:18</h2>

<p>不出意外的话，这应该是这个系列短文的最后一篇了，简单写一写自己在这一年的一些心态变化。</p>

<p>说到心态，我慢慢意识到人生很大程度上是一个心态游戏。人是一个喜欢做自我批判的动物，类似的想法比如「这件事我是做不好的」，「别人一定会觉得我这件事做得很差劲」、「别人背地里一定是在嘲笑我的」经常出现在人们的心中，变成自己进步和做事的阻碍。结合我自己的经验我想说得是，首先这些都不是真的，都是一些主观扭曲化后的想法，完全和现实违背；其次，不用在乎别人是怎么想的，无论你做得好做得差，总有人议论你。耐心地做好自己的事情，从小事慢慢积累自信。If you want to win like a champion, you have to think like a champion.</p>

<p>另外，在这一年结束后明显觉得自己变柔软了，更有同情心了。对于一些人和事，也不会再去评判了，人往往容易在不了解事情全貌的情况下给出自己主观的判断、甚至是偏见。举个例子，如果一个人如果支支吾吾一个问题解释不清楚，人会下意识地认为是不是ta的水平问题，而真实的原因可能是因为某人在某次交流中批评了ta，导致ta在那个人面前说话就格外得害怕和紧张，还是一个心理问题而不是水平问题。</p>

<p>然后也明确了未来几年不断去寻找的、对我重要的东西：知识、眼界、思维方式、有益于双方的人际关系、偶尔彻夜的长谈交心、人与人之间真实的连接感、让人难忘的体验、保持身体健康和心情愉悦。</p>

<p>自己也慢慢放弃了对「确定性」这件事的执著，以前总是希望做事之前要有明确计划，要知道自己在干什么，而过去一整年的经历劈头盖脸地告诉我们，力所能及地做计划，做好当下的事才是最重要，至于未来怎么样，除了随机应变很难想到别的方法。我们都是在迷雾中行走，没有指南针没有地图，唯一能做的是摸索前进的同时，照顾好自己以及身边的人，thrive in ambiguity。</p>

<p>好了就写到这吧，在写这个系列之前犹豫过要不要写，不过在这个如此混乱无序的世界中发出自己的信号总是没错的，可能会对某些人有所帮助，也可能找到同类的人。祝愿看到这里的大家在未来的时间里，不要放过自己向这个世界发出信号的机会，找到志同道合的伙伴，在不平凡的一年过好我们平凡细微的生活。</p>

<p>（原文链接：<a href="https://www.zhihu.com/pin/1328902807919886336">2020感想（五） 不出意外的话，这应该是…</a>）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2017工作小感]]></title>
    <link href="http://zyearn.github.io/blog/2018/02/12/2017-summary/"/>
    <updated>2018-02-12T18:23:00+01:00</updated>
    <id>http://zyearn.github.io/blog/2018/02/12/2017-summary</id>
    <content type="html"><![CDATA[<p>过去一年在百度学习了很多，踩过一些坑，也成长了很多，非常感谢帮助过我的人，这篇主要分享下自己的一些思考和想法，也和大家共勉。</p>

<p>1.保持持续学习</p>

<p>这一点永远是老生常谈的问题，任何行业任何职业都需要不断学习，像迭代产品一样进行自我迭代，这一点非常重要。而且好消息是，就我个人经验而言，如果把获得作为y轴，学习的付出作为x轴，这条曲线不是线性的，是一条斜率越来越大的曲线，也就是说已经跑起来的人会跑得越来越快。由于知识通常是有关联的，并且具备迁移性（一个思想可以在多个问题里使用），所以在相同努力的情况下，你原本学得越多，那么收获会越大。这听起来像投资，其实学习本身就是投资，可以形成利滚利。如何衡量学习的成果？让自己的速度跟上摩尔定律，即每18个月自己的综合能力需要翻倍。</p>

<p>2.深入思考以及持续深入思考的能力</p>

<p>这个世界上有很多会深入思考的人，但能持续性地深入思考是一个非常稀缺的品质。我自己也在不断地练习，我通常做法是自己和自己辩论，自己怼自己：这个设计/功能为什么要这么做？为什么不那样做？那样做的话有什么潜在问题，需要处理什么tradeoff，这个做法是最好的了吗，有没有更好的？另外一个练习是我会在碎片时间把脑子里queue里面的问题拿出来思考。一个广为流传的“好做法”是用碎片时间来阅读，但这个做法并不适合我，碎片时间根本读不进书，读书需要大片成段的专注时间，还需要做笔记，这还不是主要原因，更重要的是我需要大量的时间来把我之前的输入内化成自己的东西，碎片时间刚好可以做这件事情，很多时候我在地铁/健身/洗澡/散步的时候把某个问题想清楚了，这种体验非常好。另外还有一点，做技术的同学通常都很认真敬业，同时也很容易沉浸于技术的海洋中，但这个世界是紧紧互相联系的，读各种各样的书，然后思考各种类型的问题能让自己的思路开阔很多。对于一个问题自己心里有了一个初步的想法，觉得暂时想不出什么了的时候可以去干别的事了，下一次再想到这个问题的时候，可能就会有一个比较清晰的思路了。</p>

<p>3.学会写工业级代码，即高质量的代码设计和高性能高稳定的代码实现</p>

<p>我从去年年初至今参与了<a href="https://github.com/brpc/brpc">brpc（百度内部的rpc框架，现已开源）</a>的开发和维护工作，代码实现和抽象能力进步了很多。一个self-contained例子是，有一次需要给brpc加QueryRemover的支持：给定一个QueryString，能通过迭代器的方式来遍历key，然后决定是否删除当前的key，遍历完后返回修改后的QueryString。用naive的方式要实现这个功能其实很简单，但这不是我们追求的，这里要考虑的是：各种corner case/错误输入的处理，内存分配做到最优，性能尽可能好，当什么key都不删除的情况下应该任何内存都不分配的。最后改了几次以后代码变成了<a href="https://github.com/brpc/brpc/blob/master/src/brpc/uri.cpp#L425">这个样子</a>。现在再回过头来看这段代码，脑子里已经不再是当初naive的想法了，而是intuitively这应该就是这么实现的。类似的例子还有很多，当自己已经尽全力写好一段代码但还是被code review打回，这是一件很好的事情，因为这说明要么是自己，要么是对方还有一些不知道自己不知道的东西存在，无论是哪种情况都会对一方产生正面的作用。看代码也是一个很好的学习方式，就我个人经验来说盲目地看代码很容易坚持不下来。一种理想的方式是项目中用到了某种技术，正好需要用到/借鉴某个开源代码，然后趁热打铁有目的地去学习源码会容易很多。怎么看代码也是有技巧的，先在脑子里想一下让自己来实现会怎么做，难点记下来，然后再去看代码作者怎么做。例如我前面提到的QueryRemover，有兴趣的朋友可以想一下让你来做会怎么做，然后看一下我们的实现。目前brpc有许多<a href="https://github.com/brpc/brpc/issues">known issues</a>需要开发和解决，欢迎大家领一个走然后给我们提pr :)</p>

<p>4.区分问题的表象和root cause</p>

<p>发现了一个bug，调试发现是某个模块A报的错，那这个bug的表象就是出在模块A，但有些时候root cause可能不出在模块A，真正的原因是模块B中一个已经隐藏了很久的race condition，甚至可能是一个kernel bug。而如何提高这个区分能力，一方面在于经验，更重要的一方面在于调试能力。调试其实是有一套固定流程/方法论的，首先分析现象（问题的表象），复现bug，如果是一个随机出现的bug，那就加大压力，给系统造成瓶颈，增加bug出现概率（减小工作线程数也可以给系统造成瓶颈，但不推荐这种做法，因为如果这是个多线程bug，那减少线程会降低bug出现的概率），竭尽所能以后如果还是无法复现，那就带log去线上去复现，等复现的时候要抓住现场，然后解决问题，再次上线验证，最后总结bug。每一次bug，特别是线上问题，都是一个很好的总结反思的机会，一定是流程上的某一环节出问题了。</p>

<p>5.对问题/数字敏感，一个优秀的开发者一定是敏感的</p>

<p>我的工作导师<a href="https://github.com/jamesge">jamesge</a>曾经和我说，一个程序在control<sup>C</sup>退出的时候只要卡了一下下，就一定是哪里出问题了。还有类似的问题比如请求超时，很容易想到的解决方案是把超时时间调长，但某些情况下这只是掩盖了问题，如果有些本来应该很快返回函数处理地慢了一些，必有猫腻。不要拖，立刻去找到root cause，否则就是为以后埋坑。</p>

<p>6.锻炼抽象代码的能力，代码要尽可能低耦合高内聚，易拓展易维护</p>

<p>如果来了一个超紧急功能，我更倾向于的做法是好好评估一下，加下班做好代码抽象，而不是先粗糙实现然后加个TODO: refine this code，大部分情况下就渐渐就忘记了，变成以后的技术债了，更何况通常也不会有这种“今天开发明天上线”的需求。从软件开发的一开始就要保证每一次代码CheckIn都是高质量的，做好规范，一次写烂了就会发生第二次，然后慢慢地整个项目里都是烂代码，这就是破窗效应。在过去几年我C++写的比较多，以前有一段时间以为，功能本身的实现是需要关注的东西，而现在的观点是功能本身实现是开发中最基础最简单的东西，难的是代码抽象、性能压榨和对象的生命周期管理。另外不能偷懒，该重构的地方就立刻去重构，目的是降低代码的复杂度。让代码易维护的核心在于降低复杂度，这是一个很大的topic，推荐看《代码大全2》，最好的一本讲如何写好代码的书。</p>

<p>7.对自己设置高标准</p>

<p>曾经看到一个说法，叫面向离职编程，不是让你离职，意思就是说，你要把你的每一次代码提交，文档撰写、团队讨论都要以像在交接工作的态度来完成。写代码是写作的一个派生类，精神的传递是写作的目的之一，所以写代码同样也有这个目的，让别人看到你的代码能被惊艳到。能决定你能走多远的下限靠两样东西，基础和hardwork。当对自己设定了较高的标准，hardwork是一件为了达到标准而自然而然发生的事情，随之而来的是慢慢拥有owner意识，之后就会主动去思考目前系统的问题，然后提出问题并去推动。自己给自己找需求，自己就是产品经理，开发者，测试。当拥有一些owner意识以后，就会去把玩目前的系统，corner case、压力、异常、极限情况下的表现都会去尝试测一下，没准线上就会遇到类似的情况。对于一个系统，别人看来已经完美了，正常运行不会挂了，但真正对问题把控到位的人是不会这么想的，他会感觉整个系统都是潜在问题，担心晚上随时会挂掉，第二天迫不及待起床要优化。</p>

<p>8.随时应对变化</p>

<p>不太喜欢打标签，比如你是前端，他是后端，更喜欢的说法是，我是一名开发，目前正在做XXX相关的事情。话里的意思是，随时准备好公司/环境/时代的改变，做技术转型，不要抱着自己已有的东西死死不放，那会是优势也是枷锁，同时也要意识到有些东西是沉没成本，一个理性人在考虑未来决策的时候不应该过多地考虑沉没成本。另外我认为现在是一个最适合学机器学习的时间，它不会像之前的安卓ios大数据那样成为一时的议论焦点，然后慢慢热潮退去，对于这一点我的行动是从两年前开始正经地系统学习，不算早但也不算太晚，就算以后不做这一行也要了解未来的趋势。现在最缺的不是研究人员，去看看每年顶会的投稿量就知道了，太夸张了，而是能把技术落地的人。</p>

<p>9.8/2法则</p>

<p>花20%的时间去了解一个领域80%，而不是花全部的时间去了解一个领域。你在一个领域花的时间越多，你的边际收益会越小，当边际成本大于边际收益的时候，如果没有特殊的理由，就该换一个领域去深入了，不同领域的思维碰撞没准也会产生更有价值的想法。</p>

<p>10.保持谦虚，保持开放的心态</p>

<p>从大了看，人类只是宇宙中的蝼蚁，而从长远看，人类的历史相对宇宙而言只是昙花一现，更何况我们每个人只是生活在自己有限的圈子里，没有理由去骄傲自大，有太多未知的东西了，自己引以为傲的东西可能就是别人的习以为常。我们唯一能做得，就是找到厉害的人，向他们学习，了解他们的想法，思考过后形成融合，让自己的想法和思路更加开阔，结果就是你会变得更厉害，然后会认识更多更厉害的人，形成良性循环。能看到和他人的差距然后去提升自己最后看到自己身上的成长，这件事本身就让人激动。</p>

<p>最后一点，也是最重要的：</p>

<p>11.自信自律，早早进行各方面的积累，形成马太效应</p>

<p>自信是，一件事还没有做呢，就知道自己可以做成。这和谦虚并不矛盾，谦虚的本质是保持开放和学习的心态。这里有个问题，怎么培养自己长期持续的自信？有一个小方法，建立一本自己的成功笔记本，把自己做成功的事记在里面，多小的事都可以，每当受挫失落的时候都拿出来看一下，就会原地复活的。当自信慢慢培养起来后，就会慢慢出现一种解决问题的惯性思维，可以理解为强者思维。遇到一个问题，拥有强者思维的人不会找借口，会去找要解决问题所缺少的东西，比如他会想，只要搞定了xx、yy和zz，那么这件事就搞定了。</p>

<p>未来的路还很长，认准的事不要过早放弃，2018希望各位朋友都顺利，生活开心。</p>

<p>（同时发布于<a href="https://zhuanlan.zhihu.com/p/33787285">知乎</a>）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[回高中母校的演讲]]></title>
    <link href="http://zyearn.github.io/blog/2016/04/30/speech-in-my-high-school/"/>
    <updated>2016-04-30T18:38:00+02:00</updated>
    <id>http://zyearn.github.io/blog/2016/04/30/speech-in-my-high-school</id>
    <content type="html"><![CDATA[<p><img src="http://7d9pi3.com2.z0.glb.clouddn.com/DSC01674-min.JPG" /></p>

<p>今年三月底，我被邀请回高中母校嘉二中给高一的学生做了一个20分钟的讲座，名字叫《如果我回到高一，我会做&hellip;&hellip;》。听母校的老师说，现在的高一学生，也就是00后，个性太张扬，有非常强的自主意识，希望有一个还是学生的学长能够给他们一点启发。个性张扬从我的角度来看是一件非常好的事情，正是因为他们还这么年轻，才会初生牛犊不怕虎。等经历了更多，犯了一些错，踩一些坑，自然就会成长或者收敛一些。所以我倒没有老师那样的担心，毕竟每一代人都有各自老师眼中的大问题，但每一代都成长得非常好。</p>

<p>所以在我选题方面也是很纠结的，毕竟讲得太心灵鸡汤了怕对他们压根没用，讲得太偏实际操作了怕他们这个年龄也不懂，考虑到高一学生专注集中度，我只讲了三点，三点我认为对他们可能会有帮助的地方。精简了文字后，以下是我的演讲主体内容：</p>

<h2>主体内容</h2>

<p>学弟学妹你们好。</p>

<p>先自我介绍一下，我是二中2007届的学生，在二中度过了非常快乐的三年，在10年的时候通过自主招生进入了上海交大，我大一入学学的专业是船舶，后来因为兴趣的原因转专业到了计算机，大四的时候直接本系保研，所以我现在是一名研二的学生，会在明年毕业。</p>

<p>// 不讲人生经验，因为很多事情没有经历过就很难理解。比如说，我相信在座的大多数同学都有一个逼你们穿秋裤的妈，很不情愿，嫌妈妈很烦，10年后等你们做父母了，就会体会到父母的良苦用心。今天说一些你们能做到的事情。</p>

<h3>像学主课一样学副课</h3>

<ul>
<li>我高一高二的时候同学之间包括我有一个的现象就是重主课轻副课。当然以高考为第一原则的话这也无可厚非，我进入大学以后渐渐发现，这样的学习方式是不利于我个人的发展的，理想的方式应该是均衡地对待每一门课。</li>
<li>高中的九门课构成了一个人最基本的知识结构，缺一不可。并且每门课都是有联系的，你看物理依赖数学（可能高中体现得不多，等大学学大物的时候会发现好多都在算微积分），语文和历史相互依赖，语文的课文告诉你发生了什么，历史告诉你为什么会发生。只要你理解了这些课的关系，是非常有意思的。</li>
<li>我从实用的角度来看为什么副课是非常重要的。副课会慢慢地变成你生活的主课。拿历史课举个例子，历史课通过分析历史人物、历史事件，设身处地地想一想当事人的感受，来教会你思辨的能力，这个能力对你们往后的人生非常重要，帮助你思考、做决定的时候更加明智和理性。</li>
<li>其次，副课会拓宽你的知识面，知识面影响一个人思考问题方式。知识面广的人思考问题更加全部。比如说地理课，极大地拓宽对宏观世界的认识。我非常庆幸自己高中学好了地理，因为它解释了非常多的我小时候的问题，比如为什么会有春夏秋冬？为什么北半球的季节和南半球相反啊？为什么在夏天和冬天的白天是不一样长的啊？这些问题在这门课中得到了完美的解答，对我而言学这门课非常非常值。</li>
</ul>


<h3>去尝试</h3>

<ul>
<li>在我18岁的时候，我认识了一个年纪比较大的学长，他经常说年轻真好，我不理解啊，我羡慕他事业有成，人生美满，而我什么都没有啊，后来我发现18岁的我拥有世界上最贵的东西，时间。</li>
<li>现在的你们刚好也拥有时间。时间多意味着可以随便尝试，即使做失败了也没有人会来责备你，这个过程叫试错。试错能够让你尽早发现哪些是你的兴趣，这个兴趣不一定会成为你们的工作，兴趣能够让你在一个人的时候还能自得其乐。</li>
<li>有自己的兴趣的一个最大好处是高考报考专业非常简单。我在高三的时候不知道我未来要干什么，于是填了全国第一的船舶。但没兴趣，同时对计算机感兴趣，然后马上转专业，虽然走了点弯路，但结局还算完美。建议：如果实在不知道选什么，就选计算机。为什么？我给你们一个客观的理由：现在是一个互联网高速发展的时代，计算机人才处在一个非常缺乏的状态，并且可以满世界挑工作。 - 刚刚说了高考的话题，我们回来，继续看尝试这个话题。曾经有人做了一个研究，想调查现在7、80岁的老人中人生中最后悔的事是什么。调查结果显示每个人都不一样，有人后悔没去环球旅行、有人后悔没有多花时间陪孩子。但有一点是相同的，绝大多数人后悔“没做”某事。</li>
<li>这个研究给我们的启发是，面临机会，千万不要再说“算了，我不行，下次再说”，而是抓住这个机会。</li>
</ul>


<h3>写日记</h3>

<ul>
<li>从大一开始每天写日记，我非常后悔没能在高一就开始写。日记的好处是让你清晰地知道自己思想是如何成长起来的，如果你读去年的东西写的东西特别幼稚，那就对了。</li>
<li>一开始写每天干了什么，后来回去读发现没有任何意义。开始写每天的一些思考，后来慢慢上升到了哲学层面的问题。比如什么是重要的东西？如果我获得用不完的钱，还要不要工作。这些东西回头看看会非常有意思。</li>
<li>曾子曰：“吾日三省吾身”，我们没有必要省那么多次，一次足矣，在睡觉前花5~10分钟，把所思所想记下来，可以用软件来记，绝对是你未来的财富。</li>
</ul>

]]></content>
  </entry>
  
</feed>
